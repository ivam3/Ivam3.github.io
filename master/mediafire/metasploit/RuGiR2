#!/data/data/com.termux/files/usr/bin/bash
#CODED BY IVAM3
#This script should fixed gem issues to run all MSF versions
IFS=$'\n\t'
trap ctrl_c 2
#VAR
	R='\033[1;31m'
        G='\033[1;32m'
        Y='\033[1;33m'
        B='\033[1;34m'
        M='\033[1;35m'
        C='\033[1;36m'
        W='\033[0m'
ctrl_c() {
        echo
        printf "$R[W]$Y Going me on https://t.me/Ivam3_Bot$W
        \n"
}
CASE=$(uname -m)
if [ $CASE = "aarch64" ]
then
	ARCH="aarch64-linux-android"
elif [ $CASE = "arm" ]
then
	ARCH="arm-linux-androideabi"
elif [ $CASE = "i686" ]
then
	ARCH="i686-linux-android"
elif [ $CASE = "x86_64" ]
then
	ARCH="x86_64-linux-android"
else
	printf "NOT FOUND"
	exit
fi
	echo $(clear)
printf "$C"
	echo "   -{(Ru)by (G)em (i)ssue (R)esolved } "
	echo "                - RuGiR -"
        echo "              -{ Coded by } "
printf "$G"
        echo "      =============================="
        echo "      .___.                 ______,"
        echo "      |   |__ ______   ___  \_____ \ "
        echo "      |   \ \/ /\__ \ /   \   _(__ <,"
        echo "      |   |\   / __ \| Y Y \ /      \ "
        echo "      |___| \_/ (____|__|_| /______ /"
        echo "                     \/    \/      \/ "
        echo "      ====== By ___ Cinderella ======"
        echo
printf "$C"
        echo "          [---] Join me on [---]"
        echo "[-] www.youtube.com/c/Ivam3byCinderella [-]"
        echo "      [-] t.me/Ivam3byCinderella [-]"
	echo "            [-] t.me/ivam3 [-]"
	printf "$G\n\t[Â¿]->$W Choose an option $G<-[?]$G\n{01}$W Make a cleanner installation of termux version$G\n{02}$W Try to fix ruby gem issues with RuGiR file steps$G\n{03}$W Make a verbosing installations of the specific version$G\n{04}$W DPKG error (step 01)$G\n{05}$W DPKG issues (step 02)$G\n{99}$W exit\n\n$G"
while read -p "[$]-> " ANW && [ -z $ANW ]; do
	printf "$R[w]-> Please chosse an option\n"
done
if [ "$ANW" = "01" -o "$ANW" = "1" ]; then	
	#DROP
	apt remove -y ruby
	apt autoremove -y
	if [ -d $PREFIX/lib/ruby/ ]; then
		rm -rf $PREFIX/lib/ruby
	fi
	if [ -d $PREFIX/opt/metasploit-framework ]; then
		rm -rf $PREFIX/opt/metasploit-framework
	fi
#REINSTALLING
	apt update --fix-missing -y
	pkg upgrade -y
	apt install git ruby ruby-dev -y
#	pkg install unstable-repo -y
	apt install --reinstall ruby
	pkg install metasploit -y
	gem install shodan
	git clone https://github.com/ivam3/ivam3.github.io.git $PREFIX/tmp/Ivam3
	mv $PREFIX/tmp/Ivam3/master/mediafire/metasploit/RuGiR $PREFIX/opt/metasploit-framework
	rm $PREFIX/opt/metasploit-framework/msfupdate
	mv $PREFIX/tmp/Ivam3/master/mediafire/metasploit/msfupdate $PREFIX/opt/metasploit-framework
	rm -rf $PREFIX/tmp/Ivam3
	chmod +x $PREFIX/opt/metasploit-framework/msfupdate
	chmod +x $PREFIX/opt/metasploit-framework/RuGiR
	mv $PREFIX/opt/metasploit-framework/lib/msf/core/payload/apk.rb $PREFIX/opt/metasploit-framework/lib/msf/core/payload/apk.rb.O
	wget https://raw.githubusercontent.com/ivam3/java/master/.embed/apk.rb -O $PREFIX/opt/metasploit-framework/lib/msf/core/payload/apk.rb
	initdb $PREFIX/var/lib/postgresql
	pg_ctl -D $PREFIX/var/lib/postgresql start
	createuser msf
	createdb msf_database
	printf "\n\n$C ::::::::: METASPLOIT INSTALLED :::::::::$W\n"
	printf " The data base can be active with command\n\t$G   > postgresql start <$W\n"
	printf "      Now you can run it with command$G\n\t$G   >    msfconsole    <\n"

elif [ "$ANW" = "02" -o "$ANW" = "2" ]; then
#Adding updated gems at Gemfile.local
	yes | apt remove ruby
	apt autoremove -y
	if [ -d $PREFIX/lib/ruby/ ]; then
		rm -rf $PREFIX/lib/ruby
	fi
	yes | apt update --fix-missing && pkg upgrade && pkg install git ruby && pkg install unstable-repo && apt install --reinstall ruby
	cd $PREFIX/opt/metasploit-framework
	gem install bundler
	gem install nokogiri -- --using-system-libraries
	bundle config build.nokogiri -- using-system-libraries
	echo "$PREFIX/lib/ruby/gems/2.6.0/extensions/$ARCH/2.6.0/nokogiri-1.10.7" >> Gemfile.local
	bundle install --gemfile Gemfile.local
	rm Gemfile.local
	bundle install --full-index
	bundle update nokogiri --full-index
	gem install shodan
	printf "\n\n$C ::::::::: METASPLOIT INSTALLED :::::::::$W\n"
	printf " The data base can be active with command\n\t$G   > postgresql start <$W\n"
	printf "      Now you can run it with command$G\n\t$G   >    msfconsole    <\n"

elif [ $ANW == "03" ] || [ $ANW == "3" ]; then
	apt remove -y ruby
	apt autoremove -y
	if [ -d $PREFIX/lib/ruby/ ]; then
		rm -rf $PREFIX/lib/ruby
	fi
	if [ -d $PREFIX/lib/ruby/ ]; then
		rm -rf $PREFIX/lib/ruby
	fi
	if [ -d $PREFIX/opt/metasploit-framework ]; then
		rm -rf $PREFIX/opt/metasploit-framework
	fi
	apt update --fix-missing -y
	pkg upgrade -y
	apt install git ruby -y
#	pkg install unstable-repo -y
	apt install --reinstall ruby
	if [ ! -e $PREFIX/tmp/msfversion ]; then
        	printf "$C[?]->$W What version you are trying to fix :\n$C[ej. 0.0.0]->$W "
        	while read ANSW && [ -z $ANSW ]; do
                	printf "$R[w]-> O-ops!! Join to https://t.me/Ivam3_Bot\n$W"
        	done
        	echo "export version=$ANSW" > $PREFIX/tmp/msfversion
	fi
	if [ -d $PREFIX/opt/metasploit-framework ]; then
		rm -rf $PREFIX/opt/metasploit-framework
	fi
	pkg autoremove metasploit -y
	pkg remove unstable-repo -y
	apt autoremove -y
	apt update
	apt install -y autoconf bison clang coreutils curl findutils git apr apr-util libtool pkg-config wget make termux-tools ncurses-utils ncurses unzip zip tar postgresql termux-elf-cleaner
	cd $PREFIX/opt
	curl -LO https://github.com/rapid7/metasploit-framework/archive/$version.tar.gz
	tar -xf $PREFIX/opt/$version.tar.gz
	mv $PREFIX/opt/metasploit-framework-$version $PREFIX/opt/metasploit-framework
	cd $PREFIX/opt/metasploit-framework
	sed '/rbnacl/d' -i Gemfile.lock
	sed '/rbnacl/d' -i metasploit-framework.gemspec
	gem install bundler
	NOKOGIRI=$(gem list nokogiri -i)
	sed 's|nokogiri (1.*)|nokogiri (1.8.0)|g' -i Gemfile.lock
	if [ $NOKOGIRI == "false" ]; then
		gem install nokogiri -v '1.8.0' -- --use-system-libraries
	else
		echo "nokogiri already installed"
	fi
	cd $PREFIX/opt/metasploit-framework
	gem update --system
	bundle install -j5
	gem install shodan
	$PREFIX/bin/find -type f -executable -exec termux-fix-shebang \{\} \;
	rm ./modules/auxiliary/gather/http_pdf_authors.rb
	termux-elf-cleaner /data/data/com.termux/files/usr/lib/ruby/gems/2.6.0/gems/pg-0.20.0/lib/pg_ext.so
	cd $PREFIX/opt/metasploit-framework/config
	curl -LO https://raw.githubusercontent.com/ivam3/ivam3.github.io/master/master/mediafire/metasploit/database.yml
	mv $PREFIX/opt/metasploit-framework/lib/msf/core/payload/apk.rb $PREFIX/opt/metasploit-framework/lib/msf/core/payload/apk.rb.O
	wget https://raw.githubusercontent.com/ivam3/java/master/.embed/apk.rb -O $PREFIX/opt/metasploit-framework/lib/msf/core/payload/apk.rb
	git clone https://github.com/ivam3/ivam3.github.io.git $PREFIX/tmp/Ivam3
	mv $PREFIX/tmp/Ivam3/master/mediafire/metasploit/RuGiR $PREFIX/opt/metasploit-framework/RuGiR
	chmod 777 $PREFIX/opt/metasploit-framework/RuGiR
	rm -rf $PREFIX/tmp/Ivam3
	echo "#!/bin/bash" > $PREFIX/bin/RuGiR
	echo "#This file will help you to run RuGiR on the rigth way" >> $PREFIX/bin/RuGiR
	echo "#(Ru)by (G)ems (i)ssues (R)esolved was created by @Ivam3" >> $PREFIX/bin/RuGiR
	echo "cd $PREFIX/opt/metasploit-framework" >> $PREFIX/bin/RuGiR
	echo "unset LD_PRELOAD" >> $PREFIX/bin/RuGiR
	echo "$PREFIX/opt/metasploit-framework/RuGiR" >> $PREFIX/bin/RuGiR
	echo "#                 @IVAM3" >> $PREFIX/bin/RuGiR
	chmod 777 $PREFIX/bin/RuGiR
	mkdir -p $PREFIX/var/lib/postgresql
	initdb $PREFIX/var/lib/postgresql
	pg_ctl -D $PREFIX/var/lib/postgresql start
	createuser msf
	createdb msf_database
	rm $PREFIX/opt/$version.tar.gz
	cd ${PREFIX}/bin && curl -LO https://raw.githubusercontent.com/ivam3/ivam3.github.io/master/master/mediafire/metasploit/msfconsole && chmod +x msfconsole
	ln -sf $(which msfconsole) $PREFIX/bin/msfvenom
	echo "#!/data/data/com.termux/files/usr/bin/bash" > $PREFIX/opt/metasploit-framework/installer.sh
	echo "echo \"[*] Metasploit Framework installation finished.\"" >> $PREFIX/opt/metasploit-framework/installer.sh
	echo "#                 @Ivam3" >> $PREFIX/opt/metasploit-framework/installer.sh
	if ! cat ~/../usr/etc/bash.bashrc | grep -oE "postgresql" --silent; then
		sed -i "4a alias postgresql=\"pg_ctl -D $PREFIX/var/lib/postgresql\"" $PREFIX/etc/bash.bashrc
	fi
	! command -v i-Haklab > /dev/null || gem install lolcat
	printf "\n\n$C ::::::::: METASPLOIT INSTALLED :::::::::$W\n"
	printf " The data base can be active with command\n\t$G   > postgresql start <$W\n"
	printf "      Now you can run it with command$G\n\t$G   >    msfconsole    <\n"

elif [ $ANW == "04" ] || [ $ANW == "4" ]; then
	printf "$Y[!]->$W This process just try to fix dpkg issues$Y<-[!]$W\n"
	printf "$Y[!]->$W so you have to reinstall metasploit with$Y<-[!]$W\n"
	printf "$Y[!]->$W   IbyC-metassploit or msfupdste files   $Y<-[!]$W\n"
	printf "$Y[!]->$W        Press$G ENTER$W to continue      $Y<-[!]$W\n"
	read enter
	apt remove openssl openssl-tool -y
	apt autoremove -y
	pkg update --fix-missing
	pkg upgrade
	pkg install --reinstall ruby -y
	printf "\n$Y            ::::::::::$R WARNING !!!$Y ::::::::::$W\n"
	printf "$Y[!]->$W This process removed some essential repositories$Y<-[!]$W\n"
	printf "$Y[!]->$W  and those will be needed by Termux to work so, $Y<-[!]$W\n"
	printf "$Y[!]->$W you have to reinstall it once again after finish$Y<-[!]$W\n"
	printf "$Y[!]->$W the metasploit installation and to do this you  $Y<-[!]$W\n"
	printf "$Y[!]->$W have run RuGiR once again and choose opcion 05  $Y<-[!]$W\n"
elif [ $ANW == "05" ] || [ $ANW == "5" ]; then
	pkg install openssl openssl-tool openssl-dev -y
else
	exit
fi
if [ -e $PREFIX/tmp/msfversion ]; then
        rm $PREFIX/tmp/msfversion
fi

#				@IbyC
