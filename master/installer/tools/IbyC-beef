#!/data/data/com.termux/files/usr/bin/bash
#Created on Feb/2020
IFS=$'\n\t'
trap ctrl_c 2
TOOL="beef"
SCRIPT_NAME="IbyC-$TOOL"

R='\033[1;31m'
G='\033[1;32m'
Goke='\033[92m'
Glig=='\e[1;32m'
Y='\033[1;33m'
B='\033[1;34m'
M='\033[1;35m'
C='\033[1;36m'
W='\033[0m'

ctrl_c() {
                echo
                printf "$Y\n[!]$R Going me on$B Telegram$R t.me/Ivam3byCinderella$W\n"
		exit
}
while [ ! $(id -u) -ne 0 ]; do
	printf "$R\n[W]:-> You need to be a common user$W\n"
	exit
done
until [ -e $HOME/$SCRIPT_NAME ]; do
	printf "$R\n[W]:-> $SCRIPT_NAME file have to be in Home directory$W\n"
	exit
done
#CHECK ROOT
if [ -x /system/xbin/su ] || [ -x /su/bin/su ] || [ -x /sbin/su ]; then
        ROOT="True"
fi
echo $(clear)
        printf "$C"
        echo "                -{ IbyC } "
        echo "   -{ SO > Android - Only for Termux } "
        echo "              -{ Coded by } "
        printf "$G"
        echo "      =============================="
        echo "      .___.                 ______,"
        echo "      |   |__ ______   ___  \_____ \ "
        echo "      |   \ \/ /\__ \ /   \   _(__ <,"
        echo "      |   |\   / __ \| Y Y \ /      \ "
        echo "      |___| \_/ (____|__|_| /______ /"
        echo "                     \/    \/      \/ "
        echo "      ====== By ___ Cinderella ======"
        echo
printf "$C"
        echo "          [---] Join me on [---]"
        printf "$C[-]$W www.youtube.com/c/Ivam3byCinderella$C [-]\n"
        printf "      [-]$W t.me/Ivam3byCinderella$C [-]\n"
        printf "          [-]$W t.me/Ivam3_Bot$C [-]\n"
        sleep 1
printf "$C\n"
        echo "        [---] SPECIAL THANKS [---]"
        echo "                    TO "
        echo "       [-] MY MASTER CINDERELLA [-]"
printf "$W"
        echo "             People don't die"
        echo "    If they still live in the hearts"
        echo "           of their loved ones"
        echo "       We love her ... We miss her"
        echo "                  *RIP*"
printf "$R\n"
        echo "          [---] DISCLAIMER [---]"
printf "$W"
        echo "   If the law is violated with it's use"
        echo "     This would be the responsibility"
        echo "        of the user who handled it"
printf "$R"
        echo "       [-] Use At Your Own Risk [-]"
printf "\n$C         Press$G ENTER$C to continue"
        read enter
printf "$W\n"

NO() {
if [ -L $HOME/storage/external-1 ]; then
	SDCARD=$(ls -l $HOME/storage/external-1 | awk '{print $11}')
	if [ ! -z $SDCARD ]; then
		DIR=$SDCARD
	else
		DIR=$HOME
	fi
else
	DIR=$HOME
fi
printf "$Y\n[IbyC]:->$W Set the directory where $SCRIPT_NAME will be install$Y\n[default]:->$W $DIR\n"
read -p "[R]:-> " ANSW
DIR="${ANSW:-${DIR}}"
}

OSv=$(termux-info |awk '$1 < 11 {print $1}' |tail -n 1 |awk -F "." '{print $1}')
if [ ! -z "$OSv" ] && [ "$OSv" -lt '7' ]; then
        LIBVERSION="2.6.0"
else
        LIBVERSION="2.7.0"
fi
DIR=$PREFIX/opt

fixbigdecimal() {
        printf "$G\n[IbyC]-> FIXING BIG DECIMAL ISSUES$W\n"
        apt install -yq patchelf
        for i in aarch64-linux-android arm-linux-androideabi \
                i686-linux-android x86_64-linux-android; do
                        if [ -e "$PREFIX/lib/ruby/$LIBVERSION/${i}/bigdecimal.so" ]; then
                                if [ -n "$(patchelf --print-needed "$PREFIX/lib/ruby/$LIBVERSION/${i}/bigdecimal/util.so" | grep bigdecimal.so)" ]; then
                                        exit 0
                                fi
                                patchelf --add-needed \
                                        "$PREFIX/lib/ruby/$LIBVERSION/${i}/bigdecimal.so" \
                                        "$PREFIX/lib/ruby/$LIBVERSION/${i}/bigdecimal/util.so"
                        fi
        done
}
printf "$G\n[IbyC]-> UPGRADING TERMUX$W\n"
pkg update -y;pkg upgrade -y
printf "$G\n[IbyC]-> INSTALLING ALL PACKAGES NEEDED$W\n"
pkg install -y ruby nodejs
printf "$G\n[IbyC]-> DOWNLOADING BEEF PROJECT$W\n"
git clone https://github.com/beefproject/beef.git $DIR/$TOOL >/dev/null 2>&1
#
if [ -d $DIR/$TOOL ]; then
        cd $DIR/$TOOL
else
        printf "$Y\n[!]-> NOT SUCH BEEF WORKING DIRECTORY$W\n"
        exit
fi
printf "$G\n[IbyC]-> ADAPTED BEEF PROJECT$W\n"
sed 's|database: "/opt/GeoIP/GeoLite2-City.mmdb"|database: "/data/data/com.termux/files/usr/opt/GeoIP/GeoLite2-City.mmdb\" |g' -i config.yaml
sed 's|passwd: "beef"|passwd: "Ivam3byCinderella"|g' -i config.yaml
gem update --system
gem install bundler
bundle install
fixbigdecimal
printf "$G\n[IbyC]-> CREATING BEEF COMMAND$W\n"
curl https://raw.githubusercontent.com/ivam3/i-Haklab/master/.set/bin/beef -o $DIR/../bin/$TOOL
wget https://github.com/ivam3/i-Haklab/raw/master/.set/to-install/GeoLite2-City_20200331.tar.gz -O $DIR/$TOOL/GeoLite2-City_20200331.tar.gz
if [ -e $DIR/$TOOL/GeoLite2-City_20200331.tar.gz ]; then
	gunzip GeoLite2-City_20200331.tar.gz
	if [ -e $DIR/$TOOL/GeoLite2-City_20200331.tar ]; then
		tar xvf GeoLite2-City_20200331.tar
		rm -rf GeoLite2-City_20200331.tar
		if [ ! -d $DIR/GeoIP ]; then
			mkdir -p $DIR/GeoIP
		fi
		if [ -d $DIR/$TOOL/GeoLite2-City_20200331 ]; then
			mv GeoLite2-City_20200331/* $DIR/GeoIP
			rm -rf GeoLite2-City_20200331
		fi
	fi
else
	printf "$R\n[w]-> Data base can't be created$W\n"
	exit
fi
chmod 711 -R $DIR/$TOOL
chmod 711 $DIR/../bin/$TOOL

#ENDING SCRIPT
if [ -d $DIR/$TOOL ]; then
	printf "$G\n[DIR TOOL]:->$W $DIR/$TOOL"
	printf "$G\n[RUN IT]:->$W beef\n"
printf "$Y\n[!]-> ::::::::::::::: DONE !! :::::::::::::::: <-[!]$G\n\tTo fix issues going to$B t.me/Ivam3_Bot$W\n"
else
	printf "$R\n[FATAL ERROR]$W"
	ctrl_c
fi

#                                               @Ivam3
